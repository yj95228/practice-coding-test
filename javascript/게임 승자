function solution(p, vs) {
    playerObj = {};
    vs.forEach(players => {
        let winner = players.split(':')[0];
        let loser = players.split(':')[1];
        if(playerObj[winner]){
            if(playerObj[winner][2][loser]){
                playerObj[winner][2][loser]++;
                playerObj[winner][1] += Math.ceil(p/playerObj[winner][2][loser]);
            }else{
                playerObj[winner][2][loser] = 1;
                playerObj[winner][1] += p;
                playerObj[winner][3]++;
            }
        }else{
            playerObj[winner] = [1,p,{},1];
            playerObj[winner][2][loser] = 1
        }
    })
    const winner1 = Object.keys(playerObj).filter(player => {
        return playerObj[player][1] === Math.max(...Object.values(playerObj).map(values => values[1]))
    })
    if(winner1.length === 1) return winner1;
    const winner2 = Object.keys(playerObj).filter(player => {
        return playerObj[player][3] === Math.max(...Object.values(playerObj).map(values => values[3]))
    })
    const winner = winner1.filter(player1 => {return winner2.includes(player1)})
    return winner.sort()[0];
}
