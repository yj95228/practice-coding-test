// https://school.programmers.co.kr/learn/courses/30/lessons/49189?language=javascript
function solution(n, edge) {
    const graph = Array.from(Array(n + 1), () => [])
    for (const [src, dest] of edge) {
        graph[src].push(dest)
        graph[dest].push(src)
    }
    const distance = Array(n + 1).fill(0)
    distance[1] = 1
    const queue = [1]
    while(queue.length){
        const src = queue.shift()
        for(const desc of graph[src]){
            if(!distance[desc]){
                queue.push(desc)
                distance[desc] = distance[src] + 1
            }
        }
    }
    return distance.filter(x => x === Math.max(...distance)).length;
}
